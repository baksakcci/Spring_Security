logging:
  level:
    '[com.example.springsecurityproject]': DEBUG

server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  output:
    ansi:
      enabled: always

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: root
    password: 1234

  mvc:
    view: # mustache? default??? ?
      prefix: /templates/
      suffix: .mustache

  jpa:
    database: mysql
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google ? ??? ???? ??.
            client-id: 12807852917-qp8bfjn19r4v3btor9qobrka6inbplus.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile

          facebook:
            client-id: 695617065582807
            client-secret: 2bd4382534dae31e06046a1b4e637970
            scope:
              - email
              - public_profile

          naver:
            client-id: ???
            client-secret: ???
            scope:
              - name
              - email
              - profile_image
            client-name: Naver # ????? ??? ?? ????? ???? ?????.
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # ????? json? response ???? ????.